{"version":3,"file":"index-D99Z67NK.js","sources":["../src/lib/solidjs/defineSolidElement.tsx","../src/components/addToFolderDropdownMenu/kindaFuzzyFinder.ts","../src/components/addToFolderDropdownMenu/utils.ts","../src/components/addToFolderDropdownMenu/hooks.tsx","../src/components/addToFolderDropdownMenu/index.tsx"],"sourcesContent":["import {createEffect, createRoot, JSX} from 'solid-js';\nimport {createMutable, unwrap} from 'solid-js/store';\nimport {render} from 'solid-js/web';\n\n\ntype Args<ObservedAttribute extends string, Props, Controls extends Object = {}> = {\n  name: string;\n  component: CustomElementComponent<ObservedAttribute, Props, Controls>;\n  observedAttributes?: ObservedAttribute[];\n  shadow?: boolean;\n}\n\nexport type PassedProps<Props extends Object = {}> = Props & {\n  readonly element: HTMLElement;\n};\n\ntype AttributesRecord<ObservedAttribute extends string> = Record<ObservedAttribute, string | undefined | null>;\ntype MutableStore<T extends Object> = T;\n\ntype CustomElementComponent<ObservedAttribute extends string, Props, Controls = {}> =\n  (props: PassedProps<MutableStore<Props>>, attributes: MutableStore<AttributesRecord<ObservedAttribute>>, controls: Controls) => JSX.Element;\n\nexport type DefinedSolidElement<ObservedAttribute extends string = string, Props extends Object = {}, Controls = {}> = ReturnType<typeof defineSolidElement<Props, ObservedAttribute, Controls>>;\n\n/**\n * Defines an HMR capable custom element with solid-js rendering\n *\n * Don't forget to add `if(import.meta.hot) import.meta.hot.accept();` in the file you're\n * declaring the component to take advantage of Hot Module Replacement\n *\n * Note that it might still need a refresh if you change other parameters except the component logic\n *\n * @example\n * const MyElement = defineSolidElement({\n *   name: 'my-element',\n *   observedAttributes: ['size', 'something-else'],\n *   // props and attributes are reactive mutable stores, meaning you can also mutate them directly\n *   component: (props: {fancyProp: Date}, attributes, controls: {someAction: () => void}) => {\n *     // component logic in here\n *\n *     // expose some methods to the element\n *     controls.someAction = () => setInternalSignal('to something');\n *\n *     return <>...</>;\n *   }\n * });\n *\n * const el = new MyElement;\n * el.feedProps({fancyProp: new Date});\n *\n * // Append to DOM after feeding the props, unless it relies solely on attributes, or handles undefined props\n * otherElement.append(el);\n *\n * // Can use attributes if you want\n * el.setAttribute('size', '400');\n *\n * // Use internal methods through the `controls` property\n * el.controls.someAction();\n */\nexport default function defineSolidElement<Props extends Object, ObservedAttribute extends string, Controls = {}>({\n  name,\n  component,\n  observedAttributes = [],\n  shadow = false\n}: Args<ObservedAttribute, Props, Controls>) {\n  //\n  // When the module is hot replaced\n  if(customElements.get(name)) {\n    const previousElementClass = customElements.get(name) as typeof SolidElement;\n    previousElementClass.swapComponentFromHMR(component);\n    return previousElementClass;\n  }\n\n  let instances: (InstanceType<typeof SolidElement>)[];\n\n  if(import.meta.hot) {\n    instances = [];\n  }\n\n  const className = burgerToPascal(name);\n\n  const SolidElement = class extends HTMLElement {\n    private mountPoint: ShadowRoot | this;\n\n    private attributesStore: MutableStore<AttributesRecord<ObservedAttribute>>;\n    private propsStore: PassedProps<Props>;\n\n    private disposeContent?: () => void;\n    private disposeStores?: () => void;\n\n    /**\n     * Persist props when the component gets mounted / unmounted and allow initialization before the element\n     * is added to the DOM\n     */\n    private savedProps = ((self: typeof this) => ({\n      get element() {\n        return self;\n      }\n    } as unknown as PassedProps<Props>))(this);\n\n    public readonly controls = {} as Controls;\n\n    /**\n     * For HMR\n     */\n    public static Component = component;\n\n    public static swapComponentFromHMR(newComponent: CustomElementComponent<ObservedAttribute, Props, Controls>) {\n      if(import.meta.hot) {\n        SolidElement.Component = newComponent;\n        instances.forEach((instance) => {\n          instance?.mount?.();\n        });\n      }\n    }\n\n    static get observedAttributes() {\n      return observedAttributes;\n    }\n\n    constructor() {\n      super();\n\n      this.mountPoint = shadow ? this.attachShadow({mode: 'open'}) : this;\n    }\n\n    connectedCallback() {\n      this.mount();\n\n      if(import.meta.hot) {\n        instances.push(this);\n      }\n    }\n\n    disconnectedCallback() {\n      this.unmount();\n\n      if(import.meta.hot) {\n        const idx = instances.indexOf(this);\n        if(idx > -1) instances.splice(idx, 1);\n      }\n    }\n\n    attributeChangedCallback(name: ObservedAttribute, _oldValue: string, newValue: string) {\n      this.attributesStore[name] = newValue; // Let's hope this will not trigger infinite loops, as the values are compared before updates\n    }\n\n    public feedProps<Full extends boolean = true>(props: Full extends true ? Props : Partial<Props>) {\n      if(this.disposeStores) {\n        Object.assign(this.propsStore, props);\n      } else {\n        Object.assign(this.savedProps, props);\n      }\n    }\n\n    private initStores() {\n      createRoot(dispose => {\n        this.disposeStores = dispose;\n\n        this.propsStore = createMutable(this.savedProps);\n        this.attributesStore = createMutable({} as AttributesRecord<ObservedAttribute>);\n\n        createEffect(() => Object.keys(this.attributesStore).forEach(key => {\n          const attributeName = key as ObservedAttribute;\n          const value = this.attributesStore[attributeName];\n\n          if(this.getAttribute(attributeName) === this.attributesStore[attributeName]) return;\n\n          if(value === null || value === undefined) {\n            this.removeAttribute(attributeName);\n          } else {\n            this.setAttribute(attributeName, value);\n          }\n        }));\n      });\n    }\n\n    private mount() {\n      let savedAttributes: AttributesRecord<ObservedAttribute>;\n\n      // can happen only on hmr\n      if(this.disposeStores) savedAttributes = unwrap(this.attributesStore);\n\n      this.unmount();\n      const ComponentToMount = SolidElement.Component;\n\n      this.initStores();\n      if(savedAttributes) Object.assign(this.attributesStore, savedAttributes);\n\n      // JSX is mandatory here for cleanup to work!\n      this.disposeContent = render(() => <>{ComponentToMount(this.propsStore, this.attributesStore, this.controls)}</>, this.mountPoint);\n    }\n\n    private unmount() {\n      this.disposeContent?.();\n      this.disposeStores?.();\n\n      this.disposeStores = this.disposeContent = undefined;\n\n      this.mountPoint.replaceChildren(); // Don't leave trash in there\n    }\n\n    get [Symbol.toStringTag]() {\n      return className;\n    }\n  };\n\n  customElements.define(name, SolidElement);\n\n  return SolidElement;\n}\n\nfunction burgerToPascal(str: string) {\n  return str\n  .split('-')\n  .map(part => part.charAt(0).toUpperCase() + part.slice(1))\n  .join('');\n}\n","export default function kindaFuzzyFinder(str: string, toFind: string) {\n  return kindaFuzzyFinderImpl(str.toLowerCase(), toFind.toLowerCase(), toFind.length);\n}\n\nfunction kindaFuzzyFinderImpl(str: string, toFind: string, fm: number) {\n  let bestIndicies: number[] = [], bestScore = 0;\n\n  const n = str.length;\n  const m = toFind.length;\n\n  for(let j = 0; j < m; j++) {\n    for(let i = 0; i < n; i++) {\n      if(str[i] !== toFind[j]) continue;\n\n      const {found} = kindaFuzzyFinderImpl(str.slice(i + 1), toFind.slice(j + 1), fm);\n      const newIndicies = [i, ...found.map(fi => fi + i + 1)];\n\n      const s = score(str, toFind, newIndicies, fm, true) - punishments.missing(fm) * j;\n      if(s > bestScore) {\n        bestScore = s;\n        bestIndicies = newIndicies;\n      }\n    }\n  }\n\n  return {found: bestIndicies, score: score(str, toFind, bestIndicies, fm, true)};\n}\n\nconst punishments = {\n  missing: (length: number) => 1 / length,\n  gap: (length: number, gap: number) => 0.25 / length * gap\n};\n\nfunction score(str: string, toFind: string, indicies: number[], fm: number, punishLastMissing: boolean) {\n  const n = str.length, m = toFind.length, k = indicies.length;\n  if(!k) return 0;\n\n  let result = 1;\n\n  let fi = 0, prevsi = -1;\n  for(let i = 0; i < k && fi < m; i++) {\n    const si = indicies[i];\n    if(!(si < n)) break;\n\n    while(str[si] !== toFind[fi] && fi < m) {\n      fi++;\n      result -= punishments.missing(fm);\n    }\n    fi++;\n\n    if(prevsi != -1 && si - prevsi > 1) {\n      result -= punishments.gap(m, si - prevsi - 1);\n    }\n\n    prevsi = si;\n  }\n\n  if(punishLastMissing) result -= (fm - fi) * punishments.missing(fm);\n\n  return result;\n}\n\nif(false) {\n  const testCases = [\n    ['hello world', ['hlo', 'hew', 'wld', 'world', 'xyz']],\n    ['fuzzy finder', ['fzy', 'fin', 'fndr', 'zzi', 'der']],\n    ['JavaScript', ['jvs', 'scr', 'java', 'script', 'pt']],\n    ['keyboard', ['key', 'kbd', 'brd', 'board', 'z']],\n    ['console.log', ['cl', 'csl', 'log', 'con', 'x']],\n    ['performance', ['perf', 'mance', 'form', 'xyz', 'per']],\n    ['stack overflow', ['stov', 'sov', 'flow', 'ovr', 'ack']],\n    ['regex match', ['rx', 'mat', 'rmt', 'match', 'gg']],\n    ['autocomplete', ['auto', 'cmp', 'complete', 'lete', 'ct']],\n    ['developer tools', ['dev', 'tools', 'dvlp', 'dt', 'tl']],\n    ['machine learning', ['ml', 'mach', 'learn', 'mle', 'xyz']],\n    ['artificial intelligence', ['ai', 'art', 'intel', 'bficial', 'ce']],\n    ['data structures', ['ds', 'str', 'data', 'stru', 'zzz']],\n    ['frontend backend', ['fb', 'fe', 'be', 'front', 'back']],\n    ['react components', ['rc', 'cmp', 'comp', 'reac', 'ents']],\n    ['node.js server', ['nd', 'srv', 'node', 'js', 'ser']],\n    ['web development', ['web', 'dev', 'wdev', 'lop', 'zzz']],\n    ['browser history', ['bh', 'hist', 'browse', 'his', 'story']],\n    ['terminal command', ['term', 'cmd', 'com', 'tc', 'mand']]\n  ] as const;\n\n  for(const [source, terms] of testCases) {\n    console.log(`\\nSource: \"${source}\"`);\n    for(const term of terms) {\n      const {found, score} = kindaFuzzyFinder(source, term);\n      const arr = new Array(source.length).fill('^').map((_, i) => found.includes(i) ? source[i] : _);\n      console.log(`  Search: \"${term}\" -> (${score.toFixed(2)}) ${arr.join('')}`);\n    }\n  }\n}\n","import {onCleanup} from 'solid-js';\nimport {Middleware} from '../../helpers/middleware';\nimport {TextWithEntities} from '../../layer';\nimport getPeerId from '../../lib/appManagers/utils/peers/getPeerId';\nimport {logger, LogTypes} from '../../lib/logger';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE} from '../../lib/mtproto/mtproto_config';\nimport rootScope from '../../lib/rootScope';\nimport {MyDialogFilter} from '../../lib/storages/filters';\nimport wrapFolderTitle from '../wrappers/folderTitle';\nimport styles from './styles.module.scss';\n\n\nexport const log = logger('AddToFolderDropdownMenu', LogTypes.Debug);\n\nexport async function fetchDialogFilters() {\n  const filters = await rootScope.managers.filtersStorage.getDialogFilters();\n\n  return filters\n  .filter(filter => filter.id !== FOLDER_ID_ARCHIVE && filter.id !== FOLDER_ID_ALL)\n  .sort((a, b) => {\n    if(!a.id || !b.id) return 0;\n    return a?.localId - b?.localId;\n  });\n}\n\nconst p = (p: PeerId) => Math.abs(p);\n\nexport async function addToFilter(filter: MyDialogFilter, peerId: PeerId) {\n  log.debug('addToFilter before', filter);\n  filter = {...filter};\n\n  if(filter._ === 'dialogFilter') {\n    filter.excludePeerIds = filter.excludePeerIds?.filter(excludedPeerId => p(excludedPeerId) !== p(peerId));\n    filter.exclude_peers = filter.exclude_peers?.filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId));\n  }\n\n  const hasPinned = filter.pinnedPeerIds.find(pinnedPeerId => p(pinnedPeerId) === p(peerId));\n\n  if(!hasPinned) {\n    filter.includePeerIds = [...(filter.includePeerIds || []).filter(includedPeerId => p(includedPeerId) !== p(peerId)), peerId];\n    filter.include_peers = [...(filter.include_peers || []).filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId)), await rootScope.managers.appPeersManager.getInputPeerById(peerId)];\n  }\n\n  log.debug('addToFilter after', filter);\n\n  await rootScope.managers.filtersStorage.updateDialogFilter(filter);\n}\n\nexport async function removeFromFilter(filter: MyDialogFilter, peerId: PeerId) {\n  log.debug('removeFromFilter before', filter);\n  filter = {...filter};\n\n  filter.includePeerIds = filter.includePeerIds?.filter(includedPeerId => p(peerId) !== p(includedPeerId));\n  filter.include_peers = filter.include_peers?.filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId));\n\n  filter.pinnedPeerIds = filter.pinnedPeerIds?.filter(pinnedPeerId => p(peerId) !== p(pinnedPeerId));\n  filter.pinned_peers = filter.pinned_peers?.filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId));\n\n  if(filter._ === 'dialogFilter') {\n    filter.excludePeerIds = [...(filter.excludePeerIds || []).filter(excludedPeerId => p(excludedPeerId) !== p(peerId)), peerId];\n    filter.exclude_peers = [...(filter.exclude_peers || []).filter(inputPeer => p(getPeerId(inputPeer)) !== p(peerId)), await rootScope.managers.appPeersManager.getInputPeerById(peerId)];\n  }\n\n  log.debug('removeFromFilter after', filter);\n\n  await rootScope.managers.filtersStorage.updateDialogFilter(filter);\n}\n\nexport function wrapFolderTitleInSpan(title: TextWithEntities.textWithEntities, middleware: Middleware) {\n  const span: HTMLSpanElement = document.createElement('span');\n  const fragment = wrapFolderTitle(title, middleware, true);\n\n  span.append(fragment);\n\n  const treeWalker = document.createTreeWalker(span, NodeFilter.SHOW_TEXT);\n\n  const nodes: Node[] = [];\n  const charSpansGroups: HTMLElement[][] = [];\n\n  while(treeWalker.nextNode()) {\n    nodes.push(treeWalker.currentNode);\n  }\n\n  for(const node of nodes) {\n    const fragment = document.createDocumentFragment();\n\n    const charSpans = node.nodeValue.split('').map(char => {\n      const charSpan = document.createElement('span');\n      charSpan.innerText = char;\n      return charSpan;\n    });\n\n    charSpansGroups.push(charSpans);\n    fragment.append(...charSpans);\n\n    node.parentNode.replaceChild(fragment, node);\n  }\n\n  return {\n    span,\n    charSpansGroups\n  };\n}\n\nexport function highlightTextNodes(nodeGroups: HTMLElement[][], indicies: number[]) {\n  let acc = 0;\n\n  const toCleanup: HTMLElement[] = [];\n\n  for(const nodeGroup of nodeGroups) {\n    const n = nodeGroup.length;\n\n    const localIndicies = indicies.filter(i => i >= acc && i < acc + n).map(i => i - acc);\n    const m = localIndicies.length;\n\n    acc += n;\n\n    for(let i = 0; i < m; i++) {\n      let j = i;\n      while(j < m - 1 && localIndicies[j + 1] - 1 === localIndicies[j]) j++;\n\n      if(j === i) {\n        const li = localIndicies[i];\n        const nodeSingle = nodeGroup[li];\n        nodeSingle.classList.add(styles.Char, styles.single);\n        toCleanup.push(nodeSingle);\n        continue;\n      }\n\n      const nodeStart = nodeGroup[localIndicies[i]];\n      const nodeEnd = nodeGroup[localIndicies[j]];\n\n      nodeStart.classList.add(styles.Char, styles.start);\n      nodeEnd.classList.add(styles.Char, styles.end);\n\n      toCleanup.push(nodeStart, nodeEnd);\n\n      for(let k = i + 1; k < j; k++) {\n        const nodeMiddle = nodeGroup[localIndicies[k]];\n        nodeMiddle.classList.add(styles.Char, styles.middle);\n        toCleanup.push(nodeMiddle);\n      }\n\n      i = j;\n    }\n  }\n\n  onCleanup(() => {\n    toCleanup.forEach(el => {\n      el.className = '';\n    });\n  });\n}\n","import {Accessor, createEffect, createMemo, JSX, onCleanup, Setter, Show} from 'solid-js';\nimport {unwrap} from 'solid-js/store';\nimport {Transition} from 'solid-transition-group';\nimport contextMenuController from '../../helpers/contextMenuController';\nimport {CLICK_EVENT_NAME} from '../../helpers/dom/clickEvent';\nimport noop from '../../helpers/noop';\nimport createMiddleware from '../../helpers/solid/createMiddleware';\nimport {Dialog} from '../../layer';\nimport {isDialog} from '../../lib/appManagers/utils/dialogs/isDialog';\nimport {i18n} from '../../lib/langPack';\nimport rootScope from '../../lib/rootScope';\nimport {MyDialogFilter} from '../../lib/storages/filters';\nimport {ButtonMenuItem, ButtonMenuItemOptions} from '../buttonMenu';\nimport {IconTsx} from '../iconTsx';\nimport {getIconForFilter} from '../sidebarLeft/foldersSidebarContent/utils';\nimport showTooltip from '../tooltip';\nimport kindaFuzzyFinder from './kindaFuzzyFinder';\nimport styles from './styles.module.scss';\nimport {addToFilter, highlightTextNodes, log, removeFromFilter, wrapFolderTitleInSpan} from './utils';\n\n\nconst MIN_FUZZY_SCORE = 0.25;\n\n\ntype CreateButtonMenuIconArgs = {\n  filter: MyDialogFilter;\n  isChecked: Accessor<boolean>;\n}\n\nexport const createButtonMenuIcon = ({filter, isChecked}: CreateButtonMenuIconArgs) => (\n  <span class={`btn-menu-item-icon ${styles.ItemIcon}`}>\n    <IconTsx icon={getIconForFilter(filter)} />\n    <Transition\n      enterActiveClass={styles.AppearZoomEnterActive}\n      exitActiveClass={styles.AppearZoomEnterActive}\n      enterClass={styles.AppearZoomEnter}\n      exitToClass={styles.AppearZoomExitTo}\n    >\n      <Show when={isChecked()}>\n        <span class={styles.ItemIconCheck}>\n          <IconTsx icon='check' />\n        </span>\n      </Show>\n    </Transition>\n  </span>\n) as HTMLSpanElement;\n\n\ntype CreateButtonMenuLabelArgs = {\n  label: JSX.Element;\n  isSelected: Accessor<boolean>;\n};\n\nexport const createButtonMenuLabel = ({label, isSelected}: CreateButtonMenuLabelArgs) => (\n  <span class={styles.ItemLabel}>\n    {label}\n    <Show when={isSelected()}>\n      <IconTsx icon='enter' class={styles.ItemLabelEnter} />\n    </Show>\n  </span>\n) as HTMLSpanElement;\n\n\ntype CreateFolderItemsArgs = {\n  filters: Accessor<MyDialogFilter[]>;\n  currentFilter: Accessor<number>;\n  isInFilter: (filter: MyDialogFilter) => boolean;\n  isSelected: (filterId: number) => boolean;\n  onToggle: (filter: MyDialogFilter) => void;\n};\n\nexport type FolderItem = ReturnType<ReturnType<typeof createFolderItems>>[number];\n\nexport const createFolderItems = ({filters, isInFilter, isSelected, onToggle, currentFilter}: CreateFolderItemsArgs) => createMemo(() => {\n  const middleware = createMiddleware();\n  log.debug('creating folder items');\n\n  onCleanup(() => {\n    log.debug('destroying folder items middleware');\n    middleware.destroy();\n  });\n\n  return filters().map((filter) => {\n    const {span, charSpansGroups} = wrapFolderTitleInSpan(filter.title, middleware.get());\n    span.classList.add(styles.ItemLabelText);\n\n    const options: ButtonMenuItemOptions = {\n      iconElement: createButtonMenuIcon({filter, isChecked: () => isInFilter(filter)}),\n      textElement: createButtonMenuLabel({label: span, isSelected: () => isSelected(filter.id)}),\n      onClick: noop\n    };\n\n    const buttonMenuItem = ButtonMenuItem(options);\n\n    options.element?.addEventListener(CLICK_EVENT_NAME, async(e) => {\n      if(e.shiftKey && currentFilter() !== filter.id) e.stopPropagation();\n      onToggle(filter);\n    }, true);\n    options.element?.classList.add(styles.Item);\n\n    createEffect(() => {\n      if(!isSelected(filter.id)) return;\n      options.element?.classList.add(styles.selected);\n      onCleanup(() => void options.element?.classList.remove(styles.selected));\n    });\n\n    return {\n      filter,\n      textContent: span.textContent,\n      buttonMenuItem,\n      element: options.element,\n      charSpansGroups\n    };\n  });\n});\n\n\ntype UseToggleDialogInFilterArgs = {\n  dialog: Accessor<Dialog.dialog>;\n  isInFilter: (filter: MyDialogFilter) => boolean;\n  onNewDialog: (dialog: Dialog.dialog) => void;\n};\n\nexport const useToggleDialogInFilter = ({dialog, onNewDialog, isInFilter}: UseToggleDialogInFilterArgs) => {\n  let hasRequestInProgress = false;\n\n  return async(filter: MyDialogFilter) => {\n    if(hasRequestInProgress || !filter) return;\n\n    const unwrapped = unwrap(filter);\n\n    hasRequestInProgress = true;\n\n    try {\n      await (isInFilter(filter) ? removeFromFilter(unwrapped, dialog().peerId) : addToFilter(unwrapped, dialog().peerId));\n      const newDialog = await rootScope.managers.dialogsStorage.getAnyDialog(dialog().peerId);\n      if(!isDialog(newDialog)) return;\n      onNewDialog(newDialog);\n    } catch{} finally {\n      hasRequestInProgress = false;\n    }\n  }\n};\n\n\ntype CreateSearchableFoldersArgs = {\n  folderItems: Accessor<FolderItem[]>;\n  search: Accessor<string>;\n  isSelected: (filterId: number) => boolean;\n  setSelected: (idx?: number) => void;\n};\n\nexport const createSearchableFolders = ({folderItems, search, isSelected, setSelected}: CreateSearchableFoldersArgs) => createMemo(() => {\n  if(!search()) return {\n    folders: folderItems(),\n    visibleFoldersCount: folderItems().length\n  };\n\n  const fuzziedFolders = folderItems().map((src) => ({\n    finderResult: kindaFuzzyFinder(src.textContent, search()),\n    src\n  }));\n\n  const sortedFolders = fuzziedFolders\n  .sort(({finderResult: {found: found1, score: score1}}, {finderResult: {found: found2, score: score2}}) =>\n    score1 === score2 ? (found1[0] || 0) - (found2[0] || 0) : score2 - score1\n  );\n\n  setSelected(0);\n  onCleanup(() => void setSelected());\n\n  const visibleFoldersCount = sortedFolders.filter(({src, finderResult}) => {\n    if(finderResult.score >= MIN_FUZZY_SCORE) {\n      createEffect(() => {\n        if(isSelected(src.filter.id)) src.element.scrollIntoView({block: 'center'});\n      });\n\n      highlightTextNodes(src.charSpansGroups, finderResult.found);\n\n      return true;\n    }\n\n    src.buttonMenuItem.forEach(el => el.classList.add(styles.Hidden));\n    onCleanup(() => void src.buttonMenuItem.forEach(el => el.classList.remove(styles.Hidden)))\n  }).length;\n\n  return {\n    folders: sortedFolders.map(({src}) => src),\n    visibleFoldersCount\n  };\n});\n\n\ntype UseTooltipHintArgs = {\n  pivot: Accessor<HTMLElement>;\n};\n\nexport const useTooltipHint = ({pivot}: UseTooltipHintArgs) => {\n  let closeTooltip = noop;\n\n  setTimeout(() => {\n    closeTooltip = undefined;\n  }, 200); // wait opening animation\n\n  onCleanup(() => {\n    closeTooltip?.();\n  });\n\n  const showHint = () => {\n    if(closeTooltip) return;\n    closeTooltip = showTooltip({\n      element: pivot(),\n      vertical: 'top',\n      textElement: i18n('AddToFolderTip'),\n      lighter: true,\n      auto: true,\n      useOverlay: false,\n      onClose: () => {\n        closeTooltip = undefined;\n      }\n    }).close;\n  };\n\n  const closeAndDisableTooltip = () => {\n    closeTooltip?.();\n    closeTooltip = noop; // prevent further opening of the tooltip\n  };\n\n  return {\n    showHint,\n    closeAndDisableTooltip\n  }\n};\n\n\ntype UseInputKeydownArgs = {\n  search: Accessor<string>;\n  setSearch: Setter<string>\n  selected: Accessor<number>;\n  setSelected: Setter<number>;\n  selectedFilter: Accessor<MyDialogFilter>;\n  currentFilter: Accessor<number>;\n  onToggle: (filter: MyDialogFilter) => void;\n  visibleFoldersCount: Accessor<number>;\n};\n\nexport const useInputKeydown = ({search, setSearch, selected, setSelected, selectedFilter, currentFilter, onToggle, visibleFoldersCount}: UseInputKeydownArgs) => {\n  return (e: KeyboardEvent) => {\n    if(['ArrowUp', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'Enter'].includes(e.code)) e.preventDefault();\n\n    if(e.code === 'Escape') {\n      if(search()) setSearch('');\n      else contextMenuController.close();\n    }\n\n    if(e.code === 'Enter' && selectedFilter()) {\n      onToggle(selectedFilter());\n      if(!e.shiftKey || currentFilter() === selectedFilter().id) contextMenuController.close();\n      return;\n    }\n\n    if(typeof selected() !== 'number') return;\n\n    const increment = ['ArrowUp', 'ArrowLeft'].includes(e.code) ? -1 : ['ArrowDown', 'ArrowRight'].includes(e.code) ? 1 : 0;\n    setSelected(prev => (prev + increment + visibleFoldersCount()) % visibleFoldersCount())\n  };\n};\n","import {createComputed, createEffect, createMemo, createSelector, createSignal, For, onCleanup, onMount, Show} from 'solid-js';\nimport {IS_MOBILE} from '../../environment/userAgent';\nimport {CLICK_EVENT_NAME} from '../../helpers/dom/clickEvent';\nimport {Dialog} from '../../layer';\nimport {i18n} from '../../lib/langPack';\nimport defineSolidElement, {PassedProps} from '../../lib/solidjs/defineSolidElement';\nimport {MyDialogFilter} from '../../lib/storages/filters';\nimport appNavigationController from '../appNavigationController';\nimport {IconTsx} from '../iconTsx';\nimport Scrollable from '../scrollable2';\nimport {createFolderItems, createSearchableFolders, FolderItem, useInputKeydown, useToggleDialogInFilter, useTooltipHint} from './hooks';\nimport styles from './styles.module.scss';\nimport {fetchDialogFilters} from './utils';\n\nif(import.meta.hot) import.meta.hot.accept();\n\n\nconst MAX_VISIBLE_SCROLL_ITEMS = 6;\nconst HAVE_SCROLL_WHEN_ABOVE = 8; // and search too\n\n\ntype Props = {\n  dialog: Dialog.dialog;\n  filters: MyDialogFilter[];\n  currentFilter: () => number;\n  onCleanup?: () => void;\n  onNewDialog?: (dialog: Dialog.dialog) => void;\n};\n\n\nconst AddToFolderDropdownMenu = defineSolidElement({\n  name: 'add-to-folder-dropdown-menu',\n  component: (props: PassedProps<Props>, _, controls: {closeTooltip: () => void}) => {\n    //\n    props.element.classList.add('btn-menu', styles.Container);\n\n    let infoIcon: HTMLElement, label: HTMLDivElement, thumb: HTMLDivElement;\n\n    const [search, setSearch] = createSignal('');\n    const [selected, setSelected] = createSignal<number>();\n    const [selectableFolders, setSelectableFolders] = createSignal<FolderItem[]>([]);\n\n    const isInFilter = createSelector(\n      () => props.dialog,\n      (filter: MyDialogFilter, dialog) => !!dialog?.[`index_${filter.localId}`]\n    );\n\n    const selectedFilter = createMemo(() => selectableFolders()[selected()]?.filter);\n    const isSelected = createSelector(() => selectedFilter()?.id);\n\n    const toggleDialogInFilter = useToggleDialogInFilter({\n      dialog: () => props.dialog,\n      onNewDialog: (newDialog) => {\n        props.dialog = newDialog;\n        props.onNewDialog?.(newDialog);\n      },\n      isInFilter\n    });\n\n    const folderItems = createFolderItems({\n      filters: () => props.filters,\n      isInFilter,\n      isSelected,\n      onToggle: toggleDialogInFilter,\n      currentFilter: props.currentFilter\n    });\n\n    const searchableFolders = createSearchableFolders({\n      folderItems,\n      search,\n      isSelected,\n      setSelected\n    });\n\n    const {showHint, closeAndDisableTooltip} = useTooltipHint({pivot: () => infoIcon});\n    controls.closeTooltip = closeAndDisableTooltip;\n\n    const onInputKeyDown = useInputKeydown({\n      search,\n      setSearch,\n      selected,\n      setSelected,\n      selectedFilter,\n      currentFilter: props.currentFilter,\n      onToggle: toggleDialogInFilter,\n      visibleFoldersCount: () => searchableFolders().visibleFoldersCount\n    });\n\n    onMount(() => {\n      thumb?.addEventListener(CLICK_EVENT_NAME, e => {\n        e.stopPropagation();\n      }, true);\n    });\n\n    // Prevent calling renderedFolders before initialization\n    createComputed(() => {\n      setSelectableFolders(searchableFolders().folders);\n    });\n\n    createEffect(() => {\n      if(typeof selected() !== 'number') label?.scrollIntoView({block: 'center'});\n    });\n\n    const cleanupEscapeHandler = appNavigationController.registerEscapeHandler(() => !search());\n\n    onCleanup(() => {\n      props.onCleanup?.();\n      cleanupEscapeHandler();\n    });\n\n    const Items = () => (\n      <For each={searchableFolders().folders}>\n        {(folder) => folder.buttonMenuItem}\n      </For>\n    );\n\n    return (\n      <Show when={props.filters.length > HAVE_SCROLL_WHEN_ABOVE} fallback={<Items />}>\n        <div\n          class={styles.ScrollableContainer}\n          classList={{\n            [styles.mobile]: IS_MOBILE\n          }}\n          style={{'--max-visible-items': MAX_VISIBLE_SCROLL_ITEMS}}\n        >\n          <Show when={!IS_MOBILE}>\n            <input\n              class={styles.Input}\n              value={search()}\n              onInput={e => void setSearch(e.target.value)}\n              onBlur={(e) => {\n                e.target.focus();\n              }}\n              onKeyDown={onInputKeyDown}\n              ref={el => void setTimeout(() => void el.focus(), 100)}\n            />\n          </Show>\n          <Show when={!searchableFolders().visibleFoldersCount}>\n            {(() => {\n              const el = i18n('AddToFolderEmptySearchResult');\n              el.classList.add(styles.EmptySearchTip);\n              return el;\n            })()}\n          </Show>\n          <Scrollable class={styles.Scrollable} thumbRef={(el) => void (thumb = el)}>\n            <Show when={!IS_MOBILE}>\n              <div ref={label} class={styles.Label} onPointerEnter={showHint}>\n                {(() => {\n                  const el = i18n('AddToFolderSearch');\n                  el.classList.add(styles.LabelText);\n                  return el;\n                })()}\n                <IconTsx ref={infoIcon} icon='info' />\n              </div>\n            </Show>\n\n            <Items />\n          </Scrollable>\n        </div>\n      </Show>\n    );\n  }\n});\n\nexport {fetchDialogFilters};\nexport default AddToFolderDropdownMenu;\n"],"names":["defineSolidElement","name","component","observedAttributes","shadow","customElements","get","previousElementClass","swapComponentFromHMR","className","burgerToPascal","SolidElement","_a","HTMLElement","constructor","savedProps","self","element","controls","mountPoint","attachShadow","mode","newComponent","connectedCallback","mount","disconnectedCallback","unmount","attributeChangedCallback","_oldValue","newValue","attributesStore","feedProps","props","disposeStores","assign","propsStore","initStores","createRoot","dispose","createMutable","createEffect","Object","keys","forEach","key","attributeName","value","getAttribute","removeAttribute","setAttribute","savedAttributes","unwrap","ComponentToMount","Component","disposeContent","render","_self$","_$memo","undefined","replaceChildren","Symbol","toStringTag","__publicField","define","str","split","map","part","charAt","toUpperCase","slice","join","kindaFuzzyFinder","toFind","kindaFuzzyFinderImpl","fm","bestIndicies","bestScore","n","m","j","i","found","newIndicies","fi","s","score","punishments","length","gap","indicies","punishLastMissing","k","result","prevsi","si","log","logger","LogTypes","fetchDialogFilters","rootScope","filter","FOLDER_ID_ARCHIVE","FOLDER_ID_ALL","a","b","p","addToFilter","peerId","excludedPeerId","inputPeer","getPeerId","pinnedPeerId","includedPeerId","removeFromFilter","wrapFolderTitleInSpan","title","middleware","span","fragment","wrapFolderTitle","treeWalker","nodes","charSpansGroups","node","charSpans","char","charSpan","highlightTextNodes","nodeGroups","acc","toCleanup","nodeGroup","localIndicies","li","nodeSingle","styles","nodeStart","nodeEnd","nodeMiddle","onCleanup","el","MIN_FUZZY_SCORE","createButtonMenuIcon","isChecked","_el$","_tmpl$","_$insert","_$createComponent","IconTsx","icon","getIconForFilter","Transition","enterActiveClass","AppearZoomEnterActive","exitActiveClass","enterClass","AppearZoomEnter","exitToClass","AppearZoomExitTo","children","Show","when","_el$2","_$effect","_$className","ItemIconCheck","ItemIcon","createButtonMenuLabel","label","isSelected","_el$3","ItemLabelEnter","ItemLabel","createFolderItems","filters","isInFilter","onToggle","currentFilter","createMemo","createMiddleware","debug","destroy","classList","add","ItemLabelText","options","iconElement","textElement","id","onClick","noop","buttonMenuItem","ButtonMenuItem","addEventListener","CLICK_EVENT_NAME","e","shiftKey","stopPropagation","Item","selected","remove","textContent","useToggleDialogInFilter","dialog","onNewDialog","hasRequestInProgress","unwrapped","newDialog","managers","dialogsStorage","getAnyDialog","isDialog","createSearchableFolders","folderItems","search","setSelected","folders","visibleFoldersCount","sortedFolders","src","finderResult","sort","found1","score1","found2","score2","scrollIntoView","block","Hidden","useTooltipHint","pivot","closeTooltip","setTimeout","showHint","showTooltip","vertical","i18n","lighter","auto","useOverlay","onClose","close","closeAndDisableTooltip","useInputKeydown","setSearch","selectedFilter","includes","code","preventDefault","contextMenuController","increment","prev","HAVE_SCROLL_WHEN_ABOVE","AddToFolderDropdownMenu","_","Container","infoIcon","thumb","createSignal","selectableFolders","setSelectableFolders","createSelector","localId","toggleDialogInFilter","searchableFolders","onInputKeyDown","onMount","createComputed","cleanupEscapeHandler","appNavigationController","registerEscapeHandler","Items","For","each","folder","fallback","_tmpl$2","style","setProperty","IS_MOBILE","focus","target","$$input","Input","EmptySearchTip","Scrollable","thumbRef","_ref$","_$use","LabelText","ref","r$","_ref$2","Label","_p$","_v$","ScrollableContainer","_v$2","mobile","t","_$classList","_$delegateEvents"],"mappings":"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"}